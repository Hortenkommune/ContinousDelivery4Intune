[{"Detection":[{"Rule":"[bool](!(Get-WmiObject -Query \"select * from win32_computersystem where model like \u002720DA%\u0027\")) -or (Get-WmiObject -Query \"select * from win32_PnPSignedDriver where DeviceName like \u0027I2C Controller\u0027\")"}],"Name":"Fix 20DA Touchscreen","Execution":[{"Execute":"powershell.exe","Arguments":"-ExecutionPolicy Bypass -File C:\\Windows\\Temp\\Install-TS20DAFix.ps1"}],"FilesToDownload":[{"FileName":"Install-TS20DAFix.ps1","URL":"https://raw.githubusercontent.com/Hortenkommune/ContinuousDelivery4Intune/master/resources/scripts/Install-TS20DAFix.ps1"},{"FileName":"iaioi2ce.zip","URL":"https://raw.githubusercontent.com/Hortenkommune/ContinuousDelivery4Intune/master/resources/bin/iaioi2ce.zip"}]},{"Detection":[{"Rule":"[bool](!(Get-WmiObject -Query \"select * from win32_computersystem where model like \u0027TravelMate Spin B118-RN\u0027\")) -or ((Get-WmiObject -Query \"select * from win32_PnPSignedDriver where DeviceName like \u0027Intel(R) HD Graphics\u0027\") | where {$_.driverversion -ge \u002724.20.100.6286\u0027})"}],"Name":"Upgrade Graphics Driver on Acer BR118-RN","Execution":[{"Execute":"powershell.exe","Arguments":"-ExecutionPolicy Bypass -File C:\\Windows\\Temp\\Install-HD505Graphics.ps1"}],"FilesToDownload":[{"FileName":"Install-HD505Graphics.ps1","URL":"https://raw.githubusercontent.com/Hortenkommune/ContinuousDelivery4Intune/master/resources/scripts/Install-HD505Graphics.ps1"},{"FileName":"vga6286.zip","URL":"http://horten.kommune.no:83/filer/VGA6286.zip"}]},{"Detection":[{"Rule":"[bool]($False)"}],"Name":"Enable Wake Timers","Execution":[{"Execute":"powershell.exe","Arguments":"-ExecutionPolicy Bypass -File C:\\Windows\\Temp\\Run-PwrcfgWakeTimers.ps1"}],"FilesToDownload":[{"FileName":"Run-PwrcfgWakeTimers.ps1","URL":"https://raw.githubusercontent.com/Hortenkommune/ContinuousDelivery4Intune/master/resources/scripts/Run-PwrcfgWakeTimers.ps1"}]},{"Detection":[{"Rule":"New-PSDrive -PSProvider Registry -Name HKU -Root HKEY_USERS;$Username = Get-WMIObject -class Win32_ComputerSystem | Select-Object -ExpandProperty Username; $ObjUser = New-Object System.Security.Principal.NTAccount($Username);$SID = $Objuser.Translate([System.Security.Principal.SecurityIdentifier]) | Select-Object -ExpandProperty Value;[bool]((Get-Printer -Name \"HortenPrintElev\") -and (Test-Path \"HKU:\\$SID\\Software\\Wow6432Node\\NT-Ware\\MOMUD\"))"}],"Name":"Install uniFlow printer","Execution":[{"Execute":"powershell.exe","Arguments":"-ExecutionPolicy Bypass -File C:\\Windows\\Temp\\Install-UniflowPrinter.ps1"}],"FilesToDownload":[{"FileName":"Install-UniflowPrinter.ps1","URL":"https://raw.githubusercontent.com/Hortenkommune/ContinuousDelivery4Intune/master/resources/scripts/Install-UniflowPrinter.ps1"},{"FileName":"uniflow_pclxl.zip","URL":"https://raw.githubusercontent.com/Hortenkommune/ContinuousDelivery4Intune/master/resources/bin/uniflow_pclxl.zip"}]},{"Detection":[{"Rule":"if((Get-WMIObject -class Win32_ComputerSystem | Select-Object -ExpandProperty Username) -like \"*JonasElev*\"){$Install = $true}elseif(Get-Printer | Where-Object {@(\u0027\\\\10.85.207.8\\2FL02588\u0027,\u0027\\\\10.85.207.8\\2FL07038\u0027,\u0027\\\\10.85.207.8\\QLC31644\u0027,\u0027\\\\10.85.207.8\\XVC08019\u0027,\u0027\\\\10.85.207.8\\XVF14345\u0027,\u0027\\\\10.85.207.8\\QNW11407\u0027) -contains $_.Name }) {$Install = $true};[bool](!($Install -eq $true))"}],"Name":"Set up eksamen printers","Execution":[{"Execute":"powershell.exe","Arguments":"-ExecutionPolicy Bypass -File C:\\Windows\\Temp\\Install-EksamenPrinters.ps1"}],"FilesToDownload":[{"FileName":"Install-EksamenPrinters.ps1","URL":"https://raw.githubusercontent.com/Hortenkommune/ContinuousDelivery4Intune/master/resources/scripts/Install-EksamenPrinters.ps1"}]}]
