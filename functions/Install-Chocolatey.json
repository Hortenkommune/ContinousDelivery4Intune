{"Function":"\r\n    function Install-Chocolatey {\r\n        Param(\r\n            $Server\r\n        )\r\n        $ChocoBin = $env:ProgramData + \"\\Chocolatey\\bin\\choco.exe\"\r\n        if (!(Test-Path -Path $ChocoBin)) {\r\n            Write-Log -Value \"$ChocoBin not detected; starting installation of chocolatey\" -Severity 2 -Component \"Install-Chocolatey\"\r\n            try {\r\n                Invoke-Expression ((New-Object System.Net.WebClient).DownloadString(\u0027http://\u0027 + $Server + \u0027/install.ps1\u0027))\r\n            }\r\n            catch {\r\n                Write-Log -Value \"Failed to install chocolatey\" -Severity 3 -Component \"Install-Chocolatey\"\r\n            }\r\n        }\r\n        else {\r\n            Write-Log -Value \"$ChocoBin detected; chocolatey is already installed; running upgrade only\" -Severity 1 -Component \"Install-Chocolatey\"\r\n            Invoke-Expression \"cmd /c $ChocoBin upgrade all -y\" -ErrorAction Stop\r\n        }\r\n    }\r\n","Execute":"\r\n    Param(\r\n        $cfguri = $null\r\n    )\r\n    if ($cfguri -ne $null) {\r\n        $cfg = Invoke-RestMethod $cfguri -UseBasicParsing\r\n        Install-Chocolatey -Server $cfg.Server\r\n    }\r\n","Name":"Install-Chocolatey"}
