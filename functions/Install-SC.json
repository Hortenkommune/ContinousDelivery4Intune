{"Function":"\r\n    function Install-SC {\r\n        param(\r\n            $Name,\r\n            $Type,\r\n            $Path,\r\n            $WorkingDir,\r\n            $Arguments,\r\n            $Description,\r\n            $IconFileandType = $null\r\n        )\r\n        Write-Log -Value \"Starting detection of $($Name)\" -Severity 1 -Component \"Install-SC\"\r\n        $LocalShortcutPath = ($env:PUBLIC + \"\\Desktop\\$($Name).$($Type)\")\r\n        $ShellObj = New-Object -ComObject (\"WScript.Shell\")\r\n        $Shortcut = $ShellObj.CreateShortcut($LocalShortcutPath)\r\n        If (($Shortcut.Arguments -ne $Arguments) -or ($Shortcut.WorkingDirectory -ne $WorkingDir) -or ($Shortcut.Description -ne $Description) -or ($Shortcut.TargetPath -ne $Path)) {\r\n            If ($Type -eq \"lnk\") {\r\n                $verPath = $WorkingDir + \"\\\" + $Path\r\n                $Detection = Test-Path $verPath\r\n                If (!($Detection)) {\r\n                    $verPath = $Path\r\n                    $Detection = Test-Path $verPath\r\n                    If (!($Detection)) {\r\n                        $verPath = $Path -split \u0027 +(?=(?:[^\\\"]*\\\"[^\\\"]*\\\")*[^\\\"]*$)\u0027\r\n                        $verPath = $verPath[0] -replace \u0027\"\u0027, \u0027\u0027\r\n                        $Detection = Test-Path $verPath\r\n                    }\r\n                }\r\n            }\r\n            Else {\r\n                $Detection = \"url-file\"\r\n            }\r\n            If ($Detection) {\r\n                Write-Log -Value \"$($Name) is not as configured; starting installation\" -Severity 1 -Component \"Install-SC\"\r\n                $Shortcut.TargetPath = \"$($Path)\"\r\n                if ($Type -eq \"url\") {\r\n                    $Shortcut.Save()\r\n                    If ($IconFileandType) {\r\n                        $IconSplit = $IconFileandType.Split(\",\").Trim()\r\n                        $IconFile = \"IconFile=\" + $IconSplit[0]\r\n                        $IconIndex = \"IconIndex=\" + $IconSplit[1]\r\n                        Add-Content $LocalShortcutPath \"HotKey=0\"\r\n                        Add-Content $LocalShortcutPath \"$IconFile\"\r\n                        Add-Content $LocalShortcutPath \"$IconIndex\"\r\n                    }\r\n                }\r\n                else {\r\n                    If ($WorkingDir) {\r\n                        $Shortcut.WorkingDirectory = \"$($WorkingDir)\";\r\n                    }\r\n                    If ($Arguments) {\r\n                        $Shortcut.Arguments = \"$($Arguments)\";\r\n                    }\r\n                    If ($IconFileandType) {\r\n                        $Shortcut.IconLocation = \"$($IconFileandType)\";\r\n                    }\r\n                    If ($Description) {\r\n                        $Shortcut.Description = \"$($Description)\";\r\n                    }\r\n                    $Shortcut.Save()\r\n                }\r\n                Write-Log -Value \"$($Name) is installed\" -Severity 1 -Component \"Install-SC\"\r\n            }\r\n            else {\r\n                Write-Log -Value \"Can not detect $($Name) endpoint; skipping\" -Severity 2 -Component \"Install-SC\"\r\n            }\r\n        }\r\n        else {\r\n            Write-Log -Value \"$($Name) already exists; skipping\" -Severity 1 -Component \"Install-SC\"    \r\n        }\r\n    }\r\n","Execute":"\r\n    param(\r\n        $cfguri = $null\r\n    )\r\n    if ($cfguri -ne $null) {\r\n        $cfg = Invoke-RestMethod $cfguri -UseBasicParsing\r\n        foreach ($i in $cfg) {\r\n            Install-SC -Name $i.Name -Type $i.Type -Path $i.Path -WorkingDir $i.WorkingDir -Arguments $i.Arguments -Description $i.Description -IconFileandType $i.IconFileandType\r\n        }\r\n    }\r\n","Name":"Install-SC"}
